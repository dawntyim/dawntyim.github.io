<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>DesignPattern on Dawn Yim's Blog</title><link>https://dawntyim.github.io/tags/designpattern/</link><description>Recent content in DesignPattern on Dawn Yim's Blog</description><image><url>https://dawntyim.github.io/papermod-cover.png</url><link>https://dawntyim.github.io/papermod-cover.png</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Jan 2023 22:22:26 -0800</lastBuildDate><atom:link href="https://dawntyim.github.io/tags/designpattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Asynchronous Pattern</title><link>https://dawntyim.github.io/posts/asynchronous_pattern/</link><pubDate>Mon, 16 Jan 2023 22:22:26 -0800</pubDate><guid>https://dawntyim.github.io/posts/asynchronous_pattern/</guid><description>Asynchronous Pattern Asynchronous vs Synchronous Asynchronous and synchronous programming handle long running operations differently.
Synchronous: Blocks programming execution until a long running operation completes.
Asynchronous: Doesnâ€™t block programming execution waiting for long running operation results.
Asynchronous program splits programs into small tasks that can be executed independently and concurrently.
When to use? When need to return results quickly e.g., UI. Not to let any long running operation cause unresponsiveness in an application.</description></item></channel></rss>